{"metadata":{"role":"collection","roleHeading":"Framework","title":"Routing","externalID":"Routing","modules":[{"name":"Routing"}],"symbolKind":"module"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Routing\/documentation\/Routing"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/routing"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router"]},{"title":"Protocols","identifiers":["doc:\/\/Routing\/documentation\/Routing\/RoutableObject"]},{"title":"Structures","identifiers":["doc:\/\/Routing\/documentation\/Routing\/RoutingView"]},{"title":"Type Aliases","identifiers":["doc:\/\/Routing\/documentation\/Routing\/Routable"]}],"kind":"symbol","references":{"doc://Routing/documentation/Routing/RoutableObject":{"identifier":"doc:\/\/Routing\/documentation\/Routing\/RoutableObject","abstract":[{"code":"RoutableObject","type":"codeVoice"},{"text":" defines a protocol for objects that manage navigation within a SwiftUI application.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It specifies a set of navigation operations that enable type-safe routing between views identified by destinations conforming to the "},{"type":"codeVoice","code":"Routable"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"text":"Implementers of this protocol can control navigation stacks, allowing for forward and backward navigation, programmatically navigating to specific destinations, and modifying the navigation stack as needed.","type":"text"}],"type":"topic","kind":"symbol","title":"RoutableObject","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RoutableObject","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RoutableObject"}],"url":"\/documentation\/routing\/routableobject","role":"symbol"},"doc://Routing/documentation/Routing/Routable":{"role":"symbol","type":"topic","identifier":"doc:\/\/Routing\/documentation\/Routing\/Routable","navigatorTitle":[{"text":"Routable","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Routable","kind":"identifier"}],"kind":"symbol","abstract":[{"code":"Routable","type":"codeVoice"},{"text":" is a typealias that combines multiple protocols to define requirements for views that can be used within a routing system.","type":"text"}],"title":"Routable","url":"\/documentation\/routing\/routable"},"doc://Routing/documentation/Routing":{"kind":"symbol","url":"\/documentation\/routing","title":"Routing","type":"topic","role":"collection","abstract":[],"identifier":"doc:\/\/Routing\/documentation\/Routing"},"doc://Routing/documentation/Routing/RoutingView":{"kind":"symbol","role":"symbol","url":"\/documentation\/routing\/routingview","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RoutingView"}],"navigatorTitle":[{"text":"RoutingView","kind":"identifier"}],"identifier":"doc:\/\/Routing\/documentation\/Routing\/RoutingView","abstract":[{"code":"RoutingView","type":"codeVoice"},{"text":" is a generic structure that provides a navigation mechanism for SwiftUI views.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It uses a navigation stack to manage routing between different views based on the provided "},{"code":"Routes","type":"codeVoice"},{"type":"text","text":" enum."}],"title":"RoutingView","type":"topic"},"doc://Routing/documentation/Routing/Router":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"title":"Router","role":"symbol","identifier":"doc:\/\/Routing\/documentation\/Routing\/Router","abstract":[{"type":"codeVoice","code":"Router"},{"type":"text","text":" is a final class that acts as the navigation manager within a SwiftUI application, leveraging the "},{"code":"RoutableObject","type":"codeVoice"},{"type":"text","text":" protocol to handle navigation through a stack of routable destinations."},{"type":"text","text":" "},{"text":"It is specifically designed to work in conjunction with ","type":"text"},{"type":"codeVoice","code":"RoutingView"},{"type":"text","text":" to facilitate dynamic and type-safe navigation between views defined by the "},{"code":"Routes","type":"codeVoice"},{"text":" enum.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Router"}],"url":"\/documentation\/routing\/router"}}}