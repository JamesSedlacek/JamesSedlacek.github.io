{"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router"]},{"identifiers":["doc:\/\/Routing\/documentation\/Routing\/RoutableObject"],"title":"Protocols"},{"identifiers":["doc:\/\/Routing\/documentation\/Routing\/RoutingView"],"title":"Structures"},{"identifiers":["doc:\/\/Routing\/documentation\/Routing\/Routable"],"title":"Type Aliases"}],"metadata":{"title":"Routing","externalID":"Routing","roleHeading":"Framework","modules":[{"name":"Routing"}],"symbolKind":"module","role":"collection"},"kind":"symbol","identifier":{"url":"doc:\/\/Routing\/documentation\/Routing","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/routing"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"sections":[],"references":{"doc://Routing/documentation/Routing/RoutingView":{"abstract":[{"code":"RoutingView","type":"codeVoice"},{"type":"text","text":" is a generic structure that provides a navigation mechanism for SwiftUI views."},{"type":"text","text":" "},{"type":"text","text":"It uses a navigation stack to manage routing between different views based on the provided "},{"code":"Routes","type":"codeVoice"},{"text":" enum.","type":"text"}],"title":"RoutingView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RoutingView","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RoutingView"}],"identifier":"doc:\/\/Routing\/documentation\/Routing\/RoutingView","kind":"symbol","url":"\/documentation\/routing\/routingview","type":"topic","role":"symbol"},"doc://Routing/documentation/Routing/Routable":{"role":"symbol","type":"topic","abstract":[{"code":"Routable","type":"codeVoice"},{"type":"text","text":" is a typealias that combines multiple protocols to define requirements for views that can be used within a routing system."}],"navigatorTitle":[{"kind":"identifier","text":"Routable"}],"kind":"symbol","identifier":"doc:\/\/Routing\/documentation\/Routing\/Routable","url":"\/documentation\/routing\/routable","title":"Routable","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Routable"}]},"doc://Routing/documentation/Routing":{"title":"Routing","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/Routing\/documentation\/Routing","role":"collection","url":"\/documentation\/routing"},"doc://Routing/documentation/Routing/RoutableObject":{"abstract":[{"type":"codeVoice","code":"RoutableObject"},{"text":" defines a protocol for objects that manage navigation within a SwiftUI application.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It specifies a set of navigation operations that enable type-safe routing between views identified by destinations conforming to the "},{"type":"codeVoice","code":"Routable"},{"text":" protocol.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Implementers of this protocol can control navigation stacks, allowing for forward and backward navigation, programmatically navigating to specific destinations, and modifying the navigation stack as needed."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RoutableObject","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/routing\/routableobject","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RoutableObject"}],"title":"RoutableObject","identifier":"doc:\/\/Routing\/documentation\/Routing\/RoutableObject","role":"symbol"},"doc://Routing/documentation/Routing/Router":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"identifier":"doc:\/\/Routing\/documentation\/Routing\/Router","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Router","kind":"identifier"}],"title":"Router","abstract":[{"type":"codeVoice","code":"Router"},{"type":"text","text":" is a final class that acts as the navigation manager within a SwiftUI application, leveraging the "},{"type":"codeVoice","code":"RoutableObject"},{"text":" protocol to handle navigation through a stack of routable destinations.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It is specifically designed to work in conjunction with "},{"code":"RoutingView","type":"codeVoice"},{"text":" to facilitate dynamic and type-safe navigation between views defined by the ","type":"text"},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" enum."}],"url":"\/documentation\/routing\/router","role":"symbol"}}}