{"variants":[{"paths":["\/documentation\/routing\/router"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"code":"Router","type":"codeVoice"},{"text":" is a final class that acts as the navigation manager within a SwiftUI application, leveraging the ","type":"text"},{"type":"codeVoice","code":"RoutableObject"},{"text":" protocol to handle navigation through a stack of routable destinations.","type":"text"},{"type":"text","text":" "},{"text":"It is specifically designed to work in conjunction with ","type":"text"},{"type":"codeVoice","code":"RoutingView"},{"text":" to facilitate dynamic and type-safe navigation between views defined by the ","type":"text"},{"code":"Routes","type":"codeVoice"},{"text":" enum.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router\/init()"]},{"identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router\/stack"],"title":"Instance Properties"},{"title":"Type Aliases","identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router\/Destination"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router\/RoutableObject-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/Routing\/documentation\/Routing"]]},"sections":[],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Routing\/11Observation10ObservableP","doc:\/\/Routing\/documentation\/Routing\/RoutableObject"],"type":"conformsTo"}],"identifier":{"url":"doc:\/\/Routing\/documentation\/Routing\/Router","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Router"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Router"}],"roleHeading":"Class","symbolKind":"class","title":"Router","modules":[{"name":"Routing"}],"platforms":[{"introducedAt":"17.0","name":"iOS","deprecated":false,"beta":false,"unavailable":false},{"deprecated":false,"name":"macOS","introducedAt":"14.0","beta":false,"unavailable":false},{"beta":false,"deprecated":false,"name":"tvOS","unavailable":false,"introducedAt":"17.0"},{"name":"watchOS","introducedAt":"10.0","unavailable":false,"beta":false,"deprecated":false}],"externalID":"s:7Routing6RouterC","role":"symbol"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"},{"kind":"text","text":"<"},{"text":"Routes","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Routes"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Routes"},{"kind":"text","text":" : "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Marked with ","type":"text"},{"code":"@Observable","type":"codeVoice"},{"type":"text","text":" to integrate with SwiftUI’s data-driven architecture, "},{"code":"Router","type":"codeVoice"},{"text":" ensures that any modifications to the navigation stack prompt automatic UI updates.","type":"text"},{"type":"text","text":" "},{"text":"This behavior is pivotal for creating responsive and state-aware navigation flows in SwiftUI applications.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The class is generic over a ","type":"text"},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" parameter, which must conform to the "},{"type":"codeVoice","code":"Routable"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"text":"This design guarantees that the navigation stack consists solely of valid, predefined routes, enhancing the robustness and maintainability of the navigation logic.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usage Example:"}]},{"code":["@State private var router: Router<MyRoutes> = .init()","","var body: some View {","    RoutingView(stack: $router.stack) {","        MyRootView()","    }","}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, "},{"type":"codeVoice","code":"RoutingView"},{"type":"text","text":" utilizes a "},{"type":"codeVoice","code":"Router"},{"text":" instance to manage its navigation stack dynamically.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This setup allows for seamless navigation between the different views represented by the "},{"code":"MyRoutes","type":"codeVoice"},{"text":" enum, with ","type":"text"},{"code":"Router","type":"codeVoice"},{"text":" facilitating the navigation state management.","type":"text"}]},{"inlineContent":[{"text":"Properties:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"stack","type":"codeVoice"},{"type":"text","text":": A mutable array of "},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" that signifies the current navigation stack."},{"type":"text","text":" "},{"text":"Observing this property within SwiftUI views triggers re-renders upon its modification, enabling dynamic and reactive navigation experiences.","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Initialization:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"init()"},{"text":": Instantiates a ","type":"text"},{"type":"codeVoice","code":"Router"},{"type":"text","text":" with an initially empty navigation stack."},{"type":"text","text":" "},{"type":"text","text":"This base state is ready to be populated with routable destinations as dictated by the application’s navigation requirements."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformance to "},{"code":"RoutableObject","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Router"},{"text":" adheres to the ","type":"text"},{"code":"RoutableObject","type":"codeVoice"},{"type":"text","text":" protocol, implementing essential navigation operations such as navigating backwards, navigating to specific destinations, and managing the navigation stack."},{"type":"text","text":" "},{"type":"text","text":"These capabilities are crucial for realizing complex navigation structures in a declarative, SwiftUI-compatible manner."}]}]}]}],"kind":"content"}],"references":{"doc://Routing/documentation/Routing/Router/stack":{"identifier":"doc:\/\/Routing\/documentation\/Routing\/Router\/stack","title":"stack","role":"symbol","url":"\/documentation\/routing\/router\/stack","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"stack","kind":"identifier"},{"kind":"text","text":": ["},{"text":"Routes","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","abstract":[]},"doc://Routing/documentation/Routing/Router/Destination":{"abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Destination"}],"kind":"symbol","url":"\/documentation\/routing\/router\/destination","type":"topic","navigatorTitle":[{"text":"Destination","kind":"identifier"}],"title":"Router.Destination","identifier":"doc:\/\/Routing\/documentation\/Routing\/Router\/Destination","role":"symbol"},"doc://Routing/11Observation10ObservableP":{"type":"unresolvable","identifier":"doc:\/\/Routing\/11Observation10ObservableP","title":"Observation.Observable"},"doc://Routing/documentation/Routing/Router/init()":{"fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"type":"topic","identifier":"doc:\/\/Routing\/documentation\/Routing\/Router\/init()","kind":"symbol","title":"init()","abstract":[],"url":"\/documentation\/routing\/router\/init()","role":"symbol"},"doc://Routing/documentation/Routing":{"title":"Routing","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/Routing\/documentation\/Routing","role":"collection","url":"\/documentation\/routing"},"doc://Routing/documentation/Routing/Router/RoutableObject-Implementations":{"identifier":"doc:\/\/Routing\/documentation\/Routing\/Router\/RoutableObject-Implementations","role":"collectionGroup","abstract":[],"title":"RoutableObject Implementations","kind":"article","type":"topic","url":"\/documentation\/routing\/router\/routableobject-implementations"},"doc://Routing/documentation/Routing/RoutableObject":{"abstract":[{"type":"codeVoice","code":"RoutableObject"},{"text":" defines a protocol for objects that manage navigation within a SwiftUI application.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It specifies a set of navigation operations that enable type-safe routing between views identified by destinations conforming to the "},{"type":"codeVoice","code":"Routable"},{"text":" protocol.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Implementers of this protocol can control navigation stacks, allowing for forward and backward navigation, programmatically navigating to specific destinations, and modifying the navigation stack as needed."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RoutableObject","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/routing\/routableobject","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RoutableObject"}],"title":"RoutableObject","identifier":"doc:\/\/Routing\/documentation\/Routing\/RoutableObject","role":"symbol"},"doc://Routing/documentation/Routing/Router":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"identifier":"doc:\/\/Routing\/documentation\/Routing\/Router","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Router","kind":"identifier"}],"title":"Router","abstract":[{"type":"codeVoice","code":"Router"},{"type":"text","text":" is a final class that acts as the navigation manager within a SwiftUI application, leveraging the "},{"type":"codeVoice","code":"RoutableObject"},{"text":" protocol to handle navigation through a stack of routable destinations.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It is specifically designed to work in conjunction with "},{"code":"RoutingView","type":"codeVoice"},{"text":" to facilitate dynamic and type-safe navigation between views defined by the ","type":"text"},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" enum."}],"url":"\/documentation\/routing\/router","role":"symbol"}}}