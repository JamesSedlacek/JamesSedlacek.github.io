{"abstract":[{"code":"Router","type":"codeVoice"},{"type":"text","text":" is a final class that acts as the navigation manager within a SwiftUI application, leveraging the "},{"type":"codeVoice","code":"RoutableObject"},{"text":" protocol to handle navigation through a stack of routable destinations.","type":"text"},{"text":" ","type":"text"},{"text":"It is specifically designed to work in conjunction with ","type":"text"},{"type":"codeVoice","code":"RoutingView"},{"type":"text","text":" to facilitate dynamic and type-safe navigation between views defined by the "},{"code":"Routes","type":"codeVoice"},{"type":"text","text":" enum."}],"variants":[{"paths":["\/documentation\/routing\/router"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Routing\/documentation\/Routing"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router\/stack"]},{"title":"Type Aliases","identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router\/Destination"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/Routing\/documentation\/Routing\/Router\/RoutableObject-Implementations"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Routing\/11Observation10ObservableP","doc:\/\/Routing\/documentation\/Routing\/RoutableObject"]}],"metadata":{"role":"symbol","externalID":"s:7Routing6RouterC","modules":[{"name":"Routing"}],"title":"Router","platforms":[{"beta":false,"deprecated":false,"introducedAt":"17.0","name":"iOS","unavailable":false},{"beta":false,"introducedAt":"14.0","unavailable":false,"name":"macOS","deprecated":false},{"beta":false,"unavailable":false,"introducedAt":"17.0","name":"tvOS","deprecated":false},{"introducedAt":"10.0","name":"watchOS","deprecated":false,"beta":false,"unavailable":false}],"roleHeading":"Class","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Router"}],"navigatorTitle":[{"text":"Router","kind":"identifier"}]},"identifier":{"url":"doc:\/\/Routing\/documentation\/Routing\/Router","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Router","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Routes","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Routes","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Routes"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Marked with "},{"code":"@Observable","type":"codeVoice"},{"type":"text","text":" to integrate with SwiftUI’s data-driven architecture, "},{"code":"Router","type":"codeVoice"},{"type":"text","text":" ensures that any modifications to the navigation stack prompt automatic UI updates."},{"text":" ","type":"text"},{"text":"This behavior is pivotal for creating responsive and state-aware navigation flows in SwiftUI applications.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The class is generic over a "},{"type":"codeVoice","code":"Routes"},{"text":" parameter, which must conform to the ","type":"text"},{"code":"Routable","type":"codeVoice"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"text":"This design guarantees that the navigation stack consists solely of valid, predefined routes, enhancing the robustness and maintainability of the navigation logic.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Usage Example:"}],"type":"paragraph"},{"code":["@State private var router: Router<MyRoutes> = .init()","","var body: some View {","    RoutingView(stack: $router.stack) {","        MyRootView()","    }","}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"In this example, ","type":"text"},{"type":"codeVoice","code":"RoutingView"},{"type":"text","text":" utilizes a "},{"type":"codeVoice","code":"Router"},{"text":" instance to manage its navigation stack dynamically.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This setup allows for seamless navigation between the different views represented by the "},{"type":"codeVoice","code":"MyRoutes"},{"type":"text","text":" enum, with "},{"code":"Router","type":"codeVoice"},{"type":"text","text":" facilitating the navigation state management."}]},{"inlineContent":[{"type":"text","text":"Properties:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"stack"},{"type":"text","text":": A mutable array of "},{"code":"Routes","type":"codeVoice"},{"text":" that signifies the current navigation stack.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Observing this property within SwiftUI views triggers re-renders upon its modification, enabling dynamic and reactive navigation experiences."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Initialization:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"init()","type":"codeVoice"},{"type":"text","text":": Instantiates a "},{"type":"codeVoice","code":"Router"},{"text":" with an initially empty navigation stack.","type":"text"},{"text":" ","type":"text"},{"text":"This base state is ready to be populated with routable destinations as dictated by the application’s navigation requirements.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformance to "},{"type":"codeVoice","code":"RoutableObject"},{"text":":","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Router"},{"text":" adheres to the ","type":"text"},{"type":"codeVoice","code":"RoutableObject"},{"type":"text","text":" protocol, implementing essential navigation operations such as navigating backwards, navigating to specific destinations, and managing the navigation stack."},{"type":"text","text":" "},{"type":"text","text":"These capabilities are crucial for realizing complex navigation structures in a declarative, SwiftUI-compatible manner."}]}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://Routing/11Observation10ObservableP":{"identifier":"doc:\/\/Routing\/11Observation10ObservableP","title":"Observation.Observable","type":"unresolvable"},"doc://Routing/documentation/Routing/Router/stack":{"type":"topic","abstract":[],"title":"stack","url":"\/documentation\/routing\/router\/stack","kind":"symbol","identifier":"doc:\/\/Routing\/documentation\/Routing\/Router\/stack","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stack"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Routes"},{"kind":"text","text":"]"}],"role":"symbol"},"doc://Routing/documentation/Routing/RoutableObject":{"url":"\/documentation\/routing\/routableobject","abstract":[{"type":"codeVoice","code":"RoutableObject"},{"type":"text","text":" defines a protocol for objects that manage navigation within a SwiftUI application."},{"text":" ","type":"text"},{"text":"It specifies a set of navigation operations that enable type-safe routing between views identified by destinations conforming to the ","type":"text"},{"type":"codeVoice","code":"Routable"},{"text":" protocol.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Implementers of this protocol can control navigation stacks, allowing for forward and backward navigation, programmatically navigating to specific destinations, and modifying the navigation stack as needed."}],"identifier":"doc:\/\/Routing\/documentation\/Routing\/RoutableObject","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RoutableObject"}],"title":"RoutableObject","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RoutableObject","kind":"identifier"}],"type":"topic"},"doc://Routing/documentation/Routing/Router/RoutableObject-Implementations":{"role":"collectionGroup","title":"RoutableObject Implementations","url":"\/documentation\/routing\/router\/routableobject-implementations","identifier":"doc:\/\/Routing\/documentation\/Routing\/Router\/RoutableObject-Implementations","kind":"article","abstract":[],"type":"topic"},"doc://Routing/documentation/Routing":{"abstract":[],"role":"collection","type":"topic","url":"\/documentation\/routing","identifier":"doc:\/\/Routing\/documentation\/Routing","kind":"symbol","title":"Routing"},"doc://Routing/documentation/Routing/Router":{"title":"Router","url":"\/documentation\/routing\/router","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Router"}],"abstract":[{"code":"Router","type":"codeVoice"},{"text":" is a final class that acts as the navigation manager within a SwiftUI application, leveraging the ","type":"text"},{"type":"codeVoice","code":"RoutableObject"},{"type":"text","text":" protocol to handle navigation through a stack of routable destinations."},{"text":" ","type":"text"},{"text":"It is specifically designed to work in conjunction with ","type":"text"},{"code":"RoutingView","type":"codeVoice"},{"text":" to facilitate dynamic and type-safe navigation between views defined by the ","type":"text"},{"type":"codeVoice","code":"Routes"},{"type":"text","text":" enum."}],"type":"topic","identifier":"doc:\/\/Routing\/documentation\/Routing\/Router","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Router"}]},"doc://Routing/documentation/Routing/Router/Destination":{"abstract":[],"url":"\/documentation\/routing\/router\/destination","kind":"symbol","role":"symbol","identifier":"doc:\/\/Routing\/documentation\/Routing\/Router\/Destination","type":"topic","title":"Router.Destination","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Destination","kind":"identifier"}],"navigatorTitle":[{"text":"Destination","kind":"identifier"}]},"doc://Routing/documentation/Routing/Router/init()":{"type":"topic","abstract":[],"title":"init()","url":"\/documentation\/routing\/router\/init()","kind":"symbol","identifier":"doc:\/\/Routing\/documentation\/Routing\/Router\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol"}}}